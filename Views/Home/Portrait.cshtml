@using System.Xml.Linq

@model Turgunda2.Models.PortraitModel
@{
    if (Model == null || Model.xresult == null) { return; }
    bool edit = User.IsInRole("user");
    string id = Model.id;
}

@helper HTable(XElement container, string id, string iprop, string ttype, bool edit, bool candelete)
    {
        string bodyid = iprop == null ? "_headerid_" : "_" + iprop.Substring(iprop.LastIndexOf('/') + 1) + "_" + ttype.Substring(iprop.LastIndexOf('/') + 1);
        XElement[] headerelements = container.Element("header").Elements().ToArray();
<table>
    <thead>
    <tr>
    @foreach (XElement f in headerelements)
    {
        <th>
        @if (f.Name == "f")
        { @f.Value }
        else
        { @f.Element("label").Value } 
        </th>
    }
    @if (edit)
    {
        <td></td>
    }
    </tr>
    </thead>
    <tbody id="@bodyid">
    @foreach (XElement r in container.Elements("r"))
    {
        string eid = r.Attribute("id").Value;
        <tr id='@eid'>
        @HRow(r, eid, headerelements, id, iprop, ttype, edit, candelete)
        </tr>
    }
    </tbody>
</table>  
}

@helper HRow(XElement r, string eid, XElement[] headerelements, string id, string iprop, string rtype, bool edit, bool candelete)
    {
    XElement[] rowelements = r.Elements().ToArray();
    for (int i = 0; i < rowelements.Length; i++)
    {
        XElement cr = rowelements[i];
        XElement f = headerelements[i];
        if (cr.Name == "c")
        {
            XAttribute valueTypeAtt = f.Attribute("valueType");
            string value = cr.Value;
            if (valueTypeAtt != null) { value = Turgunda2.Models.Common.GetEnumStateLabel(valueTypeAtt.Value, value); }
        <td class="d">@value</td> 
        }
        else
        {
            XAttribute d_att = cr.Attribute("id");
            string d_id = d_att == null ? "" : d_att.Value;
            XAttribute d_ty = cr.Attribute("type");
            string d_tid = d_ty == null ? "" : d_ty.Value;
            XElement fr = f.Elements("r").FirstOrDefault(rr => rr.Attribute("type").Value == d_tid);
            XElement[] frow = new XElement[0];
            if (fr != null)
            {
                frow = fr.Elements("f").ToArray();
            }
            var qu = cr.Elements()
                .Select(c => { return new XText(c.Value); }).ToArray();
            bool isfirst = true;
            int j = 0;
        <td>
            @foreach (XElement c in cr.Elements())
            {
                string val = c.Value;
                if (j < frow.Length)
                {
                    var valueTypeAtt = frow[j].Attribute("valueType");
                    if (valueTypeAtt != null)
                    {
                        val = Turgunda2.Models.Common.GetEnumStateLabel(valueTypeAtt.Value, val);
                    }
                }
                if (!string.IsNullOrEmpty(val) && isfirst)
                {
                    string url = Url.Content("~/Home/Portrait?id=" + d_id);
                    isfirst = false;
                <a href="@url">@val</a>
                }
                else
                {
                <span>@val</span>
                }
                j++;
            }
        </td>
        }
    }
    if (edit)
    {
        <td>@Ajax.ActionLink("ред", "EditForm", new { firsttime = true, bid = id, eid = eid, etype = rtype, iprop = iprop, nc = r.Elements().Count(), d = System.DateTime.Now.Ticks }, new AjaxOptions()
       {
           HttpMethod = "Post",
           InsertionMode = InsertionMode.Replace,
           UpdateTargetId = eid
       })
            @if (candelete)
            {
                @Ajax.ActionLink("x", "DeleteRow", new { eid = eid, d = DateTime.Now.Ticks }, new AjaxOptions()
           {
               HttpMethod = "Get",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = eid,
               Confirm = "Уничтожить?"
           }) 
            }
        </td>
    }
}


<!-- ================= Начало построения ================= -->
<div>@Model.typelabel</div>
@if (Model.uri == null)
{
<!--h2 style="color: #5c87b2;">@Model.name</h2-->
}
else
{
    string[] doclist = Model.doclist;
    string url = Url.Content("~/Docs/GetPhoto?s=medium&u=" + Model.uri);
    <img src="@url" />
    if (doclist != null)
    {
        var pair = doclist.Select((s, i) => new { s = s, i = i }).FirstOrDefault(si => si.s == id);
        if (pair != null)
        {
            int ind = pair.i;
            string urlprev = ind <= 0 ? null : Url.Content("~/Home/Portrait?id=" + doclist[ind - 1]);
            string urlnext = ind >= doclist.Length - 1 ? null : Url.Content("~/Home/Portrait?id=" + doclist[ind + 1]);
            <div>
                @if (urlprev != null)
                { <a href="@urlprev">пред.</a> }
                else
                { <span>пред.</span>} 
                <span> </span>
                @if (urlnext != null)
                { <a href="@urlnext">след.</a> }
                else
                { <span>след.</span>} 
                @{
                    bool isapart = Model.xresult.Elements("ip")
                        .Where(ip => ip.Attribute("prop").Value == "http://fogid.net/o/partItem")
                        .Any(ip => ip.Elements("ir")
                            .Where(ir => ir.Attribute("type").Value == "http://fogid.net/o/DocumentPart")
                            .Any(ir => ir.Elements("r").Any()));
                    string ur = "";
                    if (Session["inDocumentId"] != null && Session["inDocumentName"] != null && 
                        !isapart) 
                    {
                        <span>   Прикрепить ли к документу </span>
                        @Html.ActionLink((string)Session["inDocumentName"], "ConnectToDocument",
                                 new { bid = id, did = (string)Session["inDocumentId"] })  
                        <span>???</span>
                    }
                }
            </div>
        }
    }
}
@{
    bool hasinverse = Model.xresult.Elements("ip").SelectMany(ip => ip.Elements("ir")).Any(ir => ir.Element("r") != null);
}
@HTable(Model.xresult, id, null, Model.xresult.Element("r").Attribute("type").Value, edit, !hasinverse)
@*
@if (edit)
{
    var query = Model.xresult.Elements("ip");
<div>
  @foreach (XElement ip in query)
  {
      if (ip.Elements("ir").Any((XElement ir) => ir.Element("r") != null)) { continue; }
      string label = ip.Element("label").Value;
      XElement[] irs = ip.Elements("ir").ToArray();
      if (irs.Length == 0) { continue; }
      else if (irs.Length == 1)
      {
          string type_id = irs[0].Attribute("type").Value;
      @Html.ActionLink(label, "AddInvRelation", new { bid = id, prop = ip.Attribute("prop").Value, rtype = type_id })
      }
      else
      {
          bool firsttime = true;
      <span>@label
        (
        @foreach (XElement ir in irs)
        {
            string ir_label = ir.Element("label").Value;
            string type_id = ir.Attribute("type").Value;
            if (!firsttime)
            { <span> </span> }
            else { firsttime = false; }
            @Html.ActionLink(ir_label, "AddInvRelation", new { bid = id, prop = ip.Attribute("prop").Value, rtype = type_id })
        }
        )
      </span>
      }
      <span> </span>
  }
</div>
}
*@
<table>
@foreach (XElement ip in @Model.xresult.Elements("ip"))
{
    if (!edit && !ip.Elements("ir").Any((XElement ir) => ir.Element("r") != null)) { continue; }
    var qu = ip.Elements("ir").Where(ir => ir.Elements("r").Count() == 0);
    //.Select(irr => irr.Element("label").Value).Aggregate((sum, s) => sum + " " + s);
    
    <tr valign="top">
        <td>@ip.Element("label").Value</td>
        <td>
        @if (edit && qu.Count() > 0)
        {
            bool needblank = false;
            <div>
            @foreach (XElement irr in qu)
            {
                string label = irr.Element("label").Value;
                string type_id = irr.Attribute("type").Value;
                if (needblank)
                { <span> </span> }
                else { needblank = true; }
                @Html.ActionLink(label, "AddInvRelation", new { bid = id, prop = ip.Attribute("prop").Value, rtype = type_id })  
            }
            </div>
        }

        @foreach (XElement ir in ip.Elements("ir"))
        {
            if (ir.Elements("r").Count() == 0) { continue; }
            XAttribute view_att = ir.Attribute("view");
            if (edit && (view_att == null || view_att.Value != "largeicons"))
            {
                string type_id = ir.Attribute("type").Value;
                string iprop = ip.Attribute("prop").Value;
                <div>@ir.Element("label").Value
                    @*[@Html.ActionLink("нов", "AddInvRelation", new { bid = id, prop = iprop, rtype = type_id })]*@
                    [@Ajax.ActionLink("нов", "EditForm", new { firsttime = true, bid = id, eid = "create888", etype = type_id, iprop = iprop, nc = ir.Element("header").Elements().Count(), d = System.DateTime.Now.Ticks }, new AjaxOptions()
                {
                    HttpMethod = "Post",
                    InsertionMode = InsertionMode.InsertAfter,
                    UpdateTargetId = "_" + iprop.Substring(iprop.LastIndexOf('/') + 1) + "_" + type_id.Substring(iprop.LastIndexOf('/') + 1)
                })]
                </div>
            }
            if (view_att != null && view_att.Value == "largeicons")
            {
                foreach (XElement r in ir.Elements("r").OrderBy(rr => rr.Value))
                {
                    string url = "";
                    string src = "";
                    List<string> parts = new List<string>();
                    foreach (var fr in r.Elements())
                    {
                        if (fr.Name == "c")
                        {
                            parts.Add(fr.Value);
                        }
                        else if (fr.Name == "r")
                        {
                            var rid_att = fr.Attribute("id");
                            var rty_att = fr.Attribute("type");
                            if (rid_att == null || rty_att == null) { continue; }
                            string rid = rid_att.Value;
                            string rty = rty_att.Value;
                            XAttribute uri_att = fr.Attribute("uri");
                            url = Url.Content("~/Home/Portrait?id=" + rid); //"?id=" + rid;
                            if (uri_att != null)
                            {
                                src = Url.Content("~/Docs/GetPhoto?s=small&u=" + uri_att.Value);
                            }
                            else
                            {
                                Dictionary<string, string> icons = new Dictionary<string, string>();
                                icons.Add(sema2012m.ONames.FOG + "document", "document_m.jpg");
                                icons.Add(sema2012m.ONames.FOG + "photo-doc", "photo_m.jpg");
                                icons.Add(sema2012m.ONames.FOG + "video-doc", "video_m.jpg");
                                icons.Add(sema2012m.ONames.FOG + "audio-doc", "audio_m.jpg");
                                icons.Add(sema2012m.ONames.FOG + "collection", "collection_m.jpg");

                                src = Url.Content("~/PublicuemCommon/icons/medium/" +
                                    (icons.ContainsKey(rty) ? icons[rty] : "default_m.jpg"));
                            }
                            parts.AddRange(fr.Elements("c").Select(c => c.Value));
                        }
                    }
                <div class="brick">
                <div>
                <a href="@url">
                    <img src="@src" />
                </a>
                </div>
                @if (parts.Count() > 0)
                {
                    int i = 0;
                <div style="font-size:smaller;">
                    @foreach (var part in parts)
                    {
                        string colo = i % 2 == 0 ? "White" : "Silver"; i++;
                        <span style="background-color:@colo;">@part</span>
                    }
                </div>
                }
                </div>

                    
                }
            }
            else
            {
                string prop = ip.Attribute("prop").Value;
                bool candelete = prop != sema2012m.ONames.p_father && prop != sema2012m.ONames.p_mother; 
                @HTable(ir, id, prop, ir.Attribute("type").Value, edit && candelete, candelete)
            }
        }
        </td>
    </tr>
}
</table>

@*
<pre>@Model.xresult.ToString()</pre>
*@

@if (Model.look != null)
{
<pre>@Model.look.ToString()</pre>
}
@if (Model.message != null)
{
<div>@Model.message</div>
}

